---
- name: Assure our preferences files directory exists
  file:
    path: "{{ limelight_deck_basepath }}/deck-ansible/prefs/"
    state: directory

- name: deploy the PHP default preferences file template for the slide deck
  template:
    src: templates/deck-ansible_prefs_default.prefs.php
    dest: "{{ limelight_deck_basepath }}/deck-ansible/prefs/default.prefs.php"
    mode: 0644
    backup: yes

- name: synchronize html basics deck
  synchronize:
    src: files/deck-ansible/
    dest: "{{ limelight_deck_basepath }}/deck-ansible/"
    delete: yes
    recursive: yes
    rsync_opts:
      - "--no-motd"
      - "--exclude=prefs/default.prefs.php"

- name: "selinux context recursively httpd_sys_rw_content_t {{ limelight_deck_basepath }}"
  sefcontext:
    target: "{{ limelight_deck_basepath }}(/.*)?"
    setype: httpd_sys_rw_content_t
    state: present

- name: Apply new SELinux file context to filesystem
  command: "restorecon -irv {{ limelight_deck_basepath }}"

### The redirect will go in the {{ limelight_deck_basepath }} path and redirect to the PHP deck dir with tag:  phpredirect
- name: Copy index.php to root dir
  template:
    src: templates/index_redirect.php
    dest: "{{ limelight_deck_basepath }}/index.php"
    owner: root
    group: wheel
    mode: 0644
  tags: [ 'never', 'phpredirect' ]

##########################################################
- name: Assure our preferences files directory exists
  file:
    path: /var/lib/awx/projects/LimeLight_Labs
    state: directory
    owner: awx
    group: awx

- name: Insert the LimeLight_Labs project
  uri:
    url: https://localhost/api/v2/projects/
    validate_certs: no
    method: POST
    user: "{{ tower_user }}"
    password: "{{ tower_pass }}"
    body_format: json
    force_basic_auth: yes
    status_code: 201
    body: |
      {
          "name": "LimeLight Labs",
          "description": "",
          "local_path": "LimeLight_Labs",
          "scm_type": "",
          "scm_url": "",
          "scm_branch": "",
          "scm_clean": false,
          "scm_delete_on_update": false,
          "credential": null,
          "timeout": 0,
          "organization": 1,
          "scm_update_on_launch": false,
          "scm_update_cache_timeout": 0,
          "custom_virtualenv": null
      }
  ignore_errors: yes
  no_log: True
  failed_when: False
  changed_when: False

